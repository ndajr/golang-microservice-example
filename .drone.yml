aliases:
  - &drone-dev-role arn:aws:iam::374047294805:role/automation-drone
  - &docker-image-tag ${DRONE_COMMIT_SHA:0:10}
  - &drone-terraform-image jmccann/drone-terraform:6.0-0.12.6
  - &infra
    image: *drone-terraform-image
    tf_version: "0.12.8"
    vars: &infra-vars
      docker_image_tag: *docker-image-tag
  - &dev-infra
    <<: *infra
    root_dir: terraform
    init_options:
      backend-config: [ "config/dev/backend.tfvars" ]
    var_files: config/dev/terraform.tfvars
    role_arn_to_assume: *drone-dev-role
    vars:
      <<: *infra-vars
      env: dev

kind: pipeline
name: main
steps:
  - name: ls
    image: alpine
    commands:
      - ls -la

  - name: get-aws-credentials
    image: neemiasjnr/drone-aws-role-auth
    settings:
      role: *drone-dev-role
      file: .env
      credentials:
        from_secret: aws_credentials

  - name: test
    image: golang:1.12-alpine
    commands:
      - apk add bash ca-certificates git gcc g++ libc-dev
      - cd pkg && go test ./...
    when:
      event: push 
      branch: master

  - name: ls
    image: alpine
    commands:
      - ls -la

  - name: plan-infra
    image: *drone-terraform-image
    settings:
      tf_version: "0.12.8"
      vars:
        docker_image_tag: *docker-image-tag
      actions:
        - validate
        - plan
      env-file: /drone/src/.env
      root_dir: terraform
      init_options:
        backend-config: [ "config/dev/backend.tfvars" ]
      var_files: config/dev/terraform.tfvars
      role_arn_to_assume: *drone-dev-role
    when:
      event: push
      branch:
        exclude: master
